__author__ = 'SuSh'

import threading

from filecreation import *


lock1=threading.Lock()

def addUserMetadata(user):
     return writeUserData("data.bin",user)

def writesubForumData(subForumData):
    print "entered subforum creation"
    #lock1.acquire()
    if writeSubforumdata("data.bin",subForumData):
        res=True
    else:
        res= False
    #lock1.release()
    print "IO;subforumdata",res
    return res

def writeMessageData(messageData):
    #lock1.acquire()
    if writeMessagedata("data.bin",messageData):
        present_forumname=messageData.forumName
        present_subforum_name=messageData.subForumname
        present_message_id=messageData.id
        res= getSubForumUpdated(present_forumname,present_subforum_name,present_message_id,messageData)
    else:
        res= False
    #lock1.release()
    print "IO;submessagedata",res
    return res

def writereplyData(replydata):
    #lock1.acquire()
    if writeReplyData("data.bin",replydata):
        link1,count=getFirstSubforumId(replydata.forumname)
        link2,count1=getFirstMessageId(link1,count,replydata.subForumname)
        res= getRequiredMessageId(link2,count1,replydata.q_id,replydata.id,replydata)
    else:
        res= False
    #lock1.release()
    print "IO;subforumdata",res
    return res

def viewQuestions(subFObj):
    link1,count=getFirstSubforumId(subFObj.forumname)
    print "link1=",link1,"count=",count
    link2,count1=getFirstMessageId(link1,count,subFObj.name)
    q_idList,author_list,lenList=getQuestionIds(link2,count1)
    print "IO;viewQuestions",q_idList,author_list,lenList
    return q_idList,author_list,lenList

def viewReplies(msgObj):
    link1,count=getFirstSubforumId(msgObj.forumName)
    link2,count1=getFirstMessageId(link1,count,msgObj.subForumname)
    link3,count2=getFirstReplyId(link2,count1,msgObj.id)
    replyIdList=getReplies(link3,count2)
    print "IO;viewReplies",replyIdList
    return replyIdList

if __name__=="__main__":
    user1=User("amani","amani12","amani@gmail.com",[1992,8,04],datetime.date(2013,6,15))
    addUserMetadata(user1)
    i=0
    while i <50:
        subforum=SubForum("hashing","amani","Education")
        writesubForumData(subforum)
        i+=1

    while i<100:
        msg=Message("Education","hashing","amani",350,id=-1,msg="Producing hash values for accessing data or for security. A hash value (or simply hash), also called a message digest, is a number generated from a string of text. The hash is substantially smaller than the text itself, and is generated by a formula in such a way that it is extremely unlikely that some other text will produce the same hash value.")
        writeMessageData(msg)
        i+=1
    while i<200:
        rep=Reply("Education","hashing",86230,"amani",20,"xxxxxxxxxxxxxxxx")
        writereplyData(rep)
        i+=1
    while i<300:
        subforum=SubForum("CricketScores","amani","Sports")
        writesubForumData(subforum)
        i+=1
    subF=SubForum("hashing","","Education")
    viewQuestions(subF)
    msgO=Message("Education","hashing","",id=-1,length=0,msg="")
    viewReplies(msgO)